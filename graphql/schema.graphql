"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10) @cache
    user(id: ID @eq): User @find @cache

    posts: [Post!]! @paginate(defaultCount: 10) @cache
    post(id: Int! @eq): Post @find @cache

    items: [Item!]! @paginate(defaultCount: 10) @cache

    me: User @auth
}

type Mutation {
    createUser(
        username: String @rules(apply: ["required", "string", "max:255"])
        email: String @rules(apply: ["required", "string", "email", "max:255", "unique:users"])
        password: String @rules(apply: ["required", "string", "min:8"])
    ): User @create 
}

type User {
    id: ID!
    username: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    posts: [Post!]! @hasMany
    usercart: [Usercart!]! @hasMany
}

type Usercart {
    id: ID!
    user_id: ID!
    item_id: ID!
    amount: Int!
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    author: User! @belongsTo
    content: String!
    comments: [Comment!]! @hasMany
    reactions: [Reaction!]! @hasMany
    commentsCount: Int! @count(relation: "comments")
    reactionsCount: Int! @count(relation: "reactions")
}

type Comment {
    id: ID!
    author: User! @belongsTo
    post: Post! @belongsTo
    content: String!
}
type Reaction {
    id: ID!
    author: User! @belongsTo
    post: Post! @belongsTo
    content: String!
}

type Item {
    id: ID!
    item_name: String
    description: String
    type: String
    minecraft_item_id: String
    minecraft_item_shorthand: String
    price: Int
    counter: Int
    author: User! @belongsTo
}
